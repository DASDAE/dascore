name: on_master_commit
on:
  push:
    branches:
      - master

jobs:
  # Calculates new coverage for the base branch
  calc_coverage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: 'latest'
          python-version: 3.9
          channels: conda-forge

      - name: install dascore
        shell: bash -l {0}
        run: |
          python -m pip install -e .[test]

      - name: run test suite
        shell: bash -l {0}
        run: |
          pytest -s --cov dascore --cov-report=xml

      - name: upload coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: master_tests
          fail_ci_if_error: true

  update_master_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: 'latest'
          python-version: 3.9
          channels: conda-forge

      - name: install dascore with docbuild reqs
        shell: bash -l {0}
        run: |
          conda install -c conda-forge pandoc
          python -m pip install -e .[docs]

      - name: build docs
        shell: bash -l {0}
        run: |
          python scripts/make_docs.py

      - name: Commit documentation changes
        shell: bash -l {0}
        run: |
            git clone https://github.com/dasdae/dascore --branch gh-pages --single-branch gh-pages
            cd gh-pages
            git reset --soft `git rev-list --max-parents=0 HEAD | tail -n 1`
            mv .git ../temp_git
            rm -rf ./*
            mv ../temp_git .git
            cp -r ../docs/_build/html/* .
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            # This command will reset the gh pages branch to first commit
            # as there is no need to keep doc history in git.
            git add .
            git commit -m "Update documentation" -a || true

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          directory: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
