name: validate
on: [push]

jobs:
  # Simply applies flake8 to code using pre-commit
  lint_code:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
#
#      - name: Setup conda
#        uses: s-weigand/setup-conda@v1
#        with:
#          python-version: 3.7

      - name: install linting packages
        run: pip install pre-commit

      - name: run all precommits
        run: pre-commit run flake8 --files fios/**/*

  # Runs the tests on combinations of the supported python/os matrix.
  test_code:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: 'latest'
          python-version: ${{ matrix.python-version }}
          activate-environment: fios
          environment-file: environment.yml
          condarc-file: .github/test_condarc.yml

#      default mocos python is 2.7 (https://github.com/actions/setup-python/issues/132)
#      - uses: actions/setup-python@v2
#        with:
#         python-version: ${{ matrix.python-version }}
#         architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

#      - if: runner.os == 'macOS'
#        name: Fix Python PATH on macOS
#        run: |
#          tee -a ~/.profile <<<'export PATH="$pythonLocation/bin:$PATH"'
#          source ~/.bashrc

      - name: install fios
        shell: bash -l {0}
        run: |
          python -m pip install -e .[test]

#      - name: fix pywin
#        if: matrix.os == 'windows-latest'
#        shell: bash -l {0}
#        run: pip install pywin32==225

      - name: print package info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      # Runs test suite and calculates coverage
      - name: run test suite
        shell: bash -l {0}
        run: |
          pytest -s --cov fios --cov-append --cov-report=xml

      # Runs examples in docstrings
      - name: test docstrings
        shell: bash -l {0}
        run: |
          pytest fios --doctest-modules

      # Runs the documentation notebooks
#      - name: test notebook docs
#        shell: bash -l {0}
#        run: |
#          pytest docs --nbval

      # upload coverage
      - name: upload coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false


# This is a very useful step for debugging, it allows you to ssh into the CI
# machine (https://github.com/marketplace/actions/debugging-with-tmate).
#
#- name: Setup tmate session
#  uses: mxschmitt/action-tmate@v3
