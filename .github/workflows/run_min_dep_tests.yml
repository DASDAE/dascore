# Run minimum dependency tests without conda
name: TestCodeMinDeps
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
    paths:
      - 'pyproject.toml'
      - '**.py'
      - '.github/workflows/run_min_dep_tests.yml'

# Cancel previous runs when this one starts.
concurrency:
  group: TestCodeMinDeps-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  # Runs the tests on combinations of the supported python/os matrix.
  test_code_min_deps:

    timeout-minutes: 25
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.13']
#        os: [ ubuntu-latest, macos-latest, windows-latest ]
#        python-version: [ '3.12', '3.13' ]


    # only run if CI isn't turned off
    if: github.event_name == 'push' || !contains(github.event.pull_request.labels.*.name, 'no_ci')

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: "true"
          fetch-depth: '0'


      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - uses: ./.github/actions/mamba-install-dascore
        with:
          python-version: ${{ matrix.python-version }}
          install-package: false
          environment-file: './.github/min_deps_environment.yml'

      - name: Install dascore (min deps)
        shell: bash -l {0}
        run: pip install -e .[test]

      # Runs test suite and calculates coverage
      - name: run test suite
        shell: bash -el {0}
        run: ./.github/test_code.sh

      # Runs examples in docstrings
      - name: test docstrings
        shell: bash -el {0}
        run: ./.github/test_code.sh doctest
