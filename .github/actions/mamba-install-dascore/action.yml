name: "Mamba Install"
description: "Sets up mamba before installing DASCore's environment.yml file."
inputs:
  python-version:
    description: "The python string of the version to install"
    required: true

  environment-file:
    description: "The path to the environment file to use."
    required: false
    default: "environment.yml"

runs:
  using: "composite"
  steps:
    - uses: mamba-org/setup-micromamba@v2
      with:
        micromamba-version: '2.0.5-0' # versions: https://github.com/mamba-org/micromamba-releases
        environment-file: ${{ inputs.environment-file }}
        init-shell: >-
          bash
          powershell
        cache-environment: true
        cache-environment-key: environment-${{ steps.date.outputs.date }}
        post-cleanup: 'all'
        create-args: >-
          python=${{ inputs.python-version }}

    # Not sure why this is needed but it appears to be the case
    - name: fix env
      shell: bash -l {0}
      run: |
        micromamba shell init --shell bash --root-prefix=~/micromamba
        eval "$(micromamba shell hook --shell bash)"
        micromamba activate dascore

    - name: print python version
      shell: bash -el {0}
      run: |
        python --version

    - name: get tags for correct versioning
      shell: bash -el {0}
      run: |
        git fetch --tags --force

    - name: install dascore
      shell: bash -l {0}
      run: |
        pip install -e .[dev]

    - name: set data cache path
      shell: bash -el {0}
      run: |
        echo "DATA_CACHE_PATH=$(python -c "import pooch; print(pooch.os_cache('dascore'))")" >> $GITHUB_ENV

    - name: cache test data
      uses: actions/cache@v3
      with:
        enableCrossOsArchive: true
        path: ${{ env.DATA_CACHE_PATH }}
        key: DATA_${{ env.CACHE_NUMBER }}

    # Print out the package info for current environment
    - name: print package info
      shell: bash -el {0}
      run: |
        micromamba info
        micromamba list
